@page "/dialogvideo"
@using Radzen.Blazor
@using Radzen
@using ExamsSchedule.Services
@using ExamsSchedule.Models
<iframe src="https://tokbox.com/embed/embed/ot-embed.js?embedId=23445b99-57f2-4342-80b9-8bb153d3d800&room=@sessionId&iframe=true" width="100%" height="400px" scrolling="auto" allow="microphone; camera">
</iframe>
@*<iframe src="https://localhost:44350/Identity/Account/PlayVideo?vurl=@sessionId" width="100%" height="100%" scrolling="auto" allow="microphone;camera">
</iframe>*@
@*<div>
        <i>Name- @fullname - SUID: @suId</i>
    </div>
    <iframe src="@videoURL?vurl=@sessionId" width="100%" height="100%" scrolling="auto" allow="microphone;camera"> </iframe>
    <hr /> *@
<div>
    <button @onclick="@(args=>CloseVideomodal())" class="btn btn-danger" type="button" style="float: right;">Close</button>
</div>

@inject SearchStudentService searchStudentService
@inject DialogService dialogService
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@code {
    [Parameter]
    public string sessionId { get; set; }
    [Parameter]
    public long id { get; set; }
    [Parameter]
    public string fullname { get; set; }
    [Parameter]
    public string suId { get; set; }
    [Parameter]
    public string videoURL { get; set; }


    protected override async Task OnInitializedAsync()
    {
        videoURL = Configuration["videoURL"];
        StateHasChanged();
    }
    public async Task CloseVideomodal()
    {
        dialogService.Close(true);
    }


    //List<string> SessionIds = new List<string>();
    //public async Task CloseVideomodal(long id, string sessionId)
    //{
    //    await searchStudentService.UpdateVideoStatus(sessionId, false);
    //    SessionIds.Remove(sessionId);
    //    dialogService.Close(true);
    //}
}

<style>
    .ui-dialog-titlebar.ui-widget-header {
        display: none;
    }
</style>